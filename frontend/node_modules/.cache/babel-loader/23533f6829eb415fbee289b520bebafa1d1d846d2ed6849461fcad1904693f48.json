{"ast":null,"code":"var _jsxFileName = \"S:\\\\A-1\\\\web-vul\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [command, setCommand] = useState('');\n  const [url, setUrl] = useState('');\n  const [scanType, setScanType] = useState('command_injection');\n  const [results, setResults] = useState({});\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResults({});\n    setError('');\n    try {\n      const response = await fetch('http://localhost:5000/scan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          command,\n          url,\n          scan_type: scanType\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResults(data.results);\n      } else {\n        setError(data.error);\n      }\n    } catch (err) {\n      setError('An error occurred while scanning.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vulnerability Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"command_injection\",\n            checked: scanType === 'command_injection',\n            onChange: () => setScanType('command_injection')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), \"Command Injection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"sql_injection\",\n            checked: scanType === 'sql_injection',\n            onChange: () => setScsetScanType('sql_injection')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), \"SQL Injection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), scanType === 'command_injection' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: command,\n          onChange: e => setCommand(e.target.value),\n          placeholder: \"Enter command\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), scanType === 'sql_injection' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          placeholder: \"Enter URL\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Object.keys(results).length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), results.command_injection && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Command Injection Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), Object.entries(results.command_injection).map(([payload, output]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Payload: \", payload]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: [\"Output: \", output]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this)]\n        }, payload, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), results.sql_injection !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SQL Injection Vulnerability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: results.sql_injection ? 'Vulnerable' : 'Not Vulnerable'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j+cCfELa07G91ERTGzUQWNyoOls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","command","setCommand","url","setUrl","scanType","setScanType","results","setResults","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","scan_type","data","json","ok","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","checked","onChange","setScsetScanType","target","placeholder","required","style","color","Object","keys","length","command_injection","entries","map","payload","output","sql_injection","undefined","_c","$RefreshReg$"],"sources":["S:/A-1/web-vul/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [command, setCommand] = useState('');\n  const [url, setUrl] = useState('');\n  const [scanType, setScanType] = useState('command_injection');\n  const [results, setResults] = useState({});\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setResults({});\n    setError('');\n\n    try {\n      const response = await fetch('http://localhost:5000/scan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ command, url, scan_type: scanType }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setResults(data.results);\n      } else {\n        setError(data.error);\n      }\n    } catch (err) {\n      setError('An error occurred while scanning.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Vulnerability Scanner</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"command_injection\"\n              checked={scanType === 'command_injection'}\n              onChange={() => setScanType('command_injection')}\n            />\n            Command Injection\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"sql_injection\"\n              checked={scanType === 'sql_injection'}\n              onChange={() => setScsetScanType('sql_injection')}\n              />\n              SQL Injection\n            </label>\n          </div>\n          \n          {scanType === 'command_injection' && (\n            <div>\n              <input\n                type=\"text\"\n                value={command}\n                onChange={(e) => setCommand(e.target.value)}\n                placeholder=\"Enter command\"\n                required\n              />\n            </div>\n          )}\n  \n          {scanType === 'sql_injection' && (\n            <div>\n              <input\n                type=\"text\"\n                value={url}\n                onChange={(e) => setUrl(e.target.value)}\n                placeholder=\"Enter URL\"\n                required\n              />\n            </div>\n          )}\n  \n          <button type=\"submit\">Scan</button>\n        </form>\n  \n        {error && <pre style={{ color: 'red' }}>Error: {error}</pre>}\n        <div>\n          {Object.keys(results).length > 0 && (\n            <h2>Scan Results:</h2>\n          )}\n          {results.command_injection && (\n            <div>\n              <h3>Command Injection Results:</h3>\n              {Object.entries(results.command_injection).map(([payload, output]) => (\n                <div key={payload}>\n                  <h4>Payload: {payload}</h4>\n                  <pre>Output: {output}</pre>\n                </div>\n              ))}\n            </div>\n          )}\n          {results.sql_injection !== undefined && (\n            <div>\n              <h3>SQL Injection Vulnerability:</h3>\n              <pre>{results.sql_injection ? 'Vulnerable' : 'Not Vulnerable'}</pre>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n  \n  export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}