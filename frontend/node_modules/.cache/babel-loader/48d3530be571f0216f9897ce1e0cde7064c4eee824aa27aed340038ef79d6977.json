{"ast":null,"code":"var _jsxFileName = \"S:\\\\A-1\\\\web-vul\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [command, setCommand] = useState('');\n  const [url, setUrl] = useState('');\n  const [scanTypes, setScanTypes] = useState({\n    command_injection: false,\n    sql_injection: false\n  });\n  const [results, setResults] = useState({});\n  const [error, setError] = useState('');\n  const handleCheckboxChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setScanTypes(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResults({});\n    setError('');\n    try {\n      const response = await fetch('http://localhost:5000/scan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          command,\n          url,\n          scan_types: Object.keys(scanTypes).filter(type => scanTypes[type])\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResults(data.results);\n      } else {\n        setError(data.error);\n      }\n    } catch (err) {\n      setError('An error occurred while scanning.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vulnerability Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"command_injection\",\n            checked: scanTypes.command_injection,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \"Command Injection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"sql_injection\",\n            checked: scanTypes.sql_injection,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), \"SQL Injection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), scanTypes.command_injection && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: command,\n          onChange: e => setCommand(e.target.value),\n          placeholder: \"Enter command\",\n          required: scanTypes.command_injection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), scanTypes.sql_injection && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          placeholder: \"Enter URL\",\n          required: scanTypes.sql_injection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Object.keys(results).length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), results.command_injection && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Command Injection Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), Object.entries(results.command_injection).map(([payload, output]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Payload: \", payload]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: [\"Output: \", output]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, payload, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), results.sql_injection !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SQL Injection Vulnerability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: results.sql_injection ? 'Vulnerable' : 'Not Vulnerable'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fDjd5kr4M9zQScvg2x6CDAZktfo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","command","setCommand","url","setUrl","scanTypes","setScanTypes","command_injection","sql_injection","results","setResults","error","setError","handleCheckboxChange","event","name","checked","target","prev","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","scan_types","Object","keys","filter","type","data","json","ok","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","value","placeholder","required","style","color","length","entries","map","payload","output","undefined","_c","$RefreshReg$"],"sources":["S:/A-1/web-vul/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [command, setCommand] = useState('');\n  const [url, setUrl] = useState('');\n  const [scanTypes, setScanTypes] = useState({\n    command_injection: false,\n    sql_injection: false,\n  });\n  const [results, setResults] = useState({});\n  const [error, setError] = useState('');\n\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setScanTypes((prev) => ({ ...prev, [name]: checked }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setResults({});\n    setError('');\n\n    try {\n      const response = await fetch('http://localhost:5000/scan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ command, url, scan_types: Object.keys(scanTypes).filter(type => scanTypes[type]) }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setResults(data.results);\n      } else {\n        setError(data.error);\n      }\n    } catch (err) {\n      setError('An error occurred while scanning.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Vulnerability Scanner</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"command_injection\"\n              checked={scanTypes.command_injection}\n              onChange={handleCheckboxChange}\n            />\n            Command Injection\n          </label>\n          <label>\n            <input\n            type=\"checkbox\"\n            name=\"sql_injection\"\n            checked={scanTypes.sql_injection}\n            onChange={handleCheckboxChange}\n          />\n          SQL Injection\n        </label>\n      </div>\n      \n      {scanTypes.command_injection && (\n        <div>\n          <input\n            type=\"text\"\n            value={command}\n            onChange={(e) => setCommand(e.target.value)}\n            placeholder=\"Enter command\"\n            required={scanTypes.command_injection}\n          />\n        </div>\n      )}\n\n      {scanTypes.sql_injection && (\n        <div>\n          <input\n            type=\"text\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            placeholder=\"Enter URL\"\n            required={scanTypes.sql_injection}\n          />\n        </div>\n      )}\n\n      <button type=\"submit\">Scan</button>\n    </form>\n\n    {error && <pre style={{ color: 'red' }}>Error: {error}</pre>}\n    <div>\n      {Object.keys(results).length > 0 && (\n        <h2>Scan Results:</h2>\n      )}\n      {results.command_injection && (\n        <div>\n          <h3>Command Injection Results:</h3>\n          {Object.entries(results.command_injection).map(([payload, output]) => (\n            <div key={payload}>\n              <h4>Payload: {payload}</h4>\n              <pre>Output: {output}</pre>\n            </div>\n          ))}\n        </div>\n      )}\n      {results.sql_injection !== undefined && (\n        <div>\n          <h3>SQL Injection Vulnerability:</h3>\n          <pre>{results.sql_injection ? 'Vulnerable' : 'Not Vulnerable'}</pre>\n        </div>\n      )}\n    </div>\n  </div>\n);\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}