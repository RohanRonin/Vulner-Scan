{"ast":null,"code":"var _jsxFileName = \"S:\\\\A-1\\\\web-vul\\\\frontend\\\\src\\\\Scanner.js\",\n  _s = $RefreshSig$();\n// Scanner.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Scanner.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scanner = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleScan = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/scan', {\n        url\n      });\n      setResult(response.data.vulnerable);\n    } catch (error) {\n      console.error(\"Error scanning the URL\", error);\n      setResult(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SQL Injection Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      placeholder: \"Enter URL to scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScan,\n      disabled: loading,\n      children: loading ? \"Scanning...\" : \"Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: result ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"vulnerable\",\n        children: \"Vulnerable to SQL Injection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"not-vulnerable\",\n        children: \"Not Vulnerable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Scanner, \"BiDLNdt5+ZbYVpI0F8hUXCqCz20=\");\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Scanner","_s","url","setUrl","result","setResult","loading","setLoading","handleScan","response","post","data","vulnerable","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["S:/A-1/web-vul/frontend/src/Scanner.js"],"sourcesContent":["// Scanner.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Scanner.css'; // Import the CSS file\r\n\r\nconst Scanner = () => {\r\n    const [url, setUrl] = useState('');\r\n    const [result, setResult] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleScan = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/scan', { url });\r\n            setResult(response.data.vulnerable);\r\n        } catch (error) {\r\n            console.error(\"Error scanning the URL\", error);\r\n            setResult(null);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>SQL Injection Scanner</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={url}\r\n                onChange={(e) => setUrl(e.target.value)}\r\n                placeholder=\"Enter URL to scan\"\r\n            />\r\n            <button onClick={handleScan} disabled={loading}>\r\n                {loading ? \"Scanning...\" : \"Scan\"}\r\n            </button>\r\n            {result !== null && (\r\n                <div className=\"result\">\r\n                    {result ? (\r\n                        <span className=\"vulnerable\">Vulnerable to SQL Injection</span>\r\n                    ) : (\r\n                        <span className=\"not-vulnerable\">Not Vulnerable</span>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scanner;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,4BAA4B,EAAE;QAAER;MAAI,CAAC,CAAC;MACxEG,SAAS,CAACI,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CR,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBjB,OAAA;MAAAiB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BrB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,GAAI;MACXqB,QAAQ,EAAGC,CAAC,IAAKrB,MAAM,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,WAAW,EAAC;IAAmB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFrB,OAAA;MAAQ4B,OAAO,EAAEnB,UAAW;MAACoB,QAAQ,EAAEtB,OAAQ;MAAAU,QAAA,EAC1CV,OAAO,GAAG,aAAa,GAAG;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACRhB,MAAM,KAAK,IAAI,iBACZL,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAClBZ,MAAM,gBACHL,OAAA;QAAMgB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAE/DrB,OAAA;QAAMgB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IACxD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CAzCID,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}